apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migrate
  labels:
    app: {{ .Release.Name }}
    job: migrate
  annotations:
    # Run before install and before upgrade
    "helm.sh/hook": "post-install,pre-upgrade"
    # ensure old hook job is cleaned up before creating a new one
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        job: migrate
    spec:
      restartPolicy: OnFailure
      containers:
        - name: migrate
          image: "{{ .Values.application.image.repository }}:{{ .Values.application.image.tag }}"
          imagePullPolicy: IfNotPresent
          command: ["python", "manage.py", "migrate"]
          env:
            - name: DATABASE_NAME
              value: "{{ .Values.postgresql.database }}"
            - name: DATABASE_USER
              value: "{{ .Values.postgresql.username }}"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql-password
                  key: password
            - name: DATABASE_HOST
              value: "{{ .Release.Name }}-postgresql" # Service name for PostgreSQL
            - name: DATABASE_PORT
              value: "5432"
          {{- if .Values.application.debug }}
            - name: DEBUG
              value: "True"
          {{- else }}
            - name: DEBUG
              value: "False"
          {{- end }}
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-api-key
                  key: apikey