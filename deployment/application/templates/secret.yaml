# This conditional checks if a Kubernetes Secret named "<release-name>-api-key" does not exist in the current release namespace.
# If the Secret is absent, the following template content will be rendered (typically to create the Secret).
# This helps prevent overwriting an existing Secret during Helm upgrades or re-installs.
{{- if not (lookup "v1" "Secret" .Release.Namespace (printf "%s-api-key" .Release.Name)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-api-key
  labels:
    app: {{ .Release.Name }}
  annotations:
    # These two annotations ensure the resource is created before Helm installs the chart and deleted before
    # re-creating it, preventing installation conflicts.
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation
stringData:
  apikey: {{ randAlphaNum 20 }}
{{- end }}